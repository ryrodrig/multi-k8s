# using docker
sudo: required
# need docker to be pre installed.
services:
  - docker

before_install:
# setup google cloud locally on dev.
  - curl https://sdk.cloud.google.com | bash > dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  # update kubectl command
  - gcloud components update kubectl
  # similar to IAM user in kubernetes.
  # service-account.json - contains the user details which is encrypted and pushed to travis.
  # inorder to encrypt json file you will need to install travis cli locally
  - gcloud auth activate-service-account --key-file service-account.json
  # generated when the file is encrypted.
  - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d

script:
  - docker run rodrr301/react-test npm test -- --coverage

after_success:
  - docker build -t rodrr301/multi-client ./client
  - docker build -t rodrr301/multi-nginx ./nginx
  - docker build -t rodrr301/multi-server ./server
  - docker build -t rodrr301/multi-worker ./worker
  # Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Take those images and push them to docker hub
  - docker push rodrr301/multi-client
  - docker push rodrr301/multi-nginx
  - docker push rodrr301/multi-server
  - docker push rodrr301/multi-worker

deploy:
  provider: elasticbeanstalk
  region: us-east-2
  app: multi-docker
  env: MultiDocker-env
  bucket_name: elasticbeanstalk-us-east-2-175860741103
  bucket_path: docker-multi
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY
